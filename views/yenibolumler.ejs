<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - AniMax</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #0f172a;
            color: white;
            padding-bottom: 4rem;
        }

        .anime-group {
            background: rgba(30, 41, 59, 0.7);
            backdrop-filter: blur(12px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        .anime-group:hover {
            border-color: rgba(59, 130, 246, 0.5);
            transform: translateY(-2px);
            box-shadow: 0 8px 15px -3px rgba(0, 0, 0, 0.2);
        }

        .episode-item {
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
            background: rgba(30, 41, 59, 0.4);
        }

        .episode-item:hover {
            background: rgba(59, 130, 246, 0.1);
            border-left-color: #3b82f6;
            transform: translateX(5px);
        }

        .time-badge {
            background: rgba(59, 130, 246, 0.2);
            border: 1px solid rgba(59, 130, 246, 0.3);
            font-size: 0.75rem;
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
        }

        .anime-title {
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 1;
            -webkit-box-orient: vertical;
        }

        .episodes-container {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .episodes-container.open {
            max-height: 2000px;
        }

        .toggle-icon {
            transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .toggle-icon.open {
            transform: rotate(180deg);
            color: #3b82f6;
        }

        .main-content {
            margin-left: 280px;
            padding: 2rem;
            min-height: 100vh;
            width: calc(100% - 280px);
        }

        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
                width: 100%;
                padding: 1rem;
                margin-bottom: 4rem;
            }
        }

        .search-input {
            background: rgba(30, 41, 59, 0.7);
            backdrop-filter: blur(12px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .search-input:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
        }

        .play-icon-wrapper {
            width: 40px;
            height: 40px;
            background: rgba(59, 130, 246, 0.2);
            border: 1px solid rgba(59, 130, 246, 0.3);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .episode-item:hover .play-icon-wrapper {
            background: rgba(59, 130, 246, 0.3);
            transform: scale(1.1);
        }

        .episode-item:hover .play-icon {
            transform: scale(1.2);
        }

        .play-icon {
            color: #3b82f6;
            transition: all 0.3s ease;
        }
    </style>
</head>
<body class="min-h-screen">
    <%- include('partials/navbar') %>

    <!-- Ana İçerik -->
    <div class="main-content">
        <div class="flex flex-col md:flex-row items-start md:items-center justify-between gap-4 mb-8">
            <h1 class="text-3xl font-bold flex items-center gap-3">
                <i class="fas fa-clock text-blue-500"></i>
                <span>Yeni Eklenen Bölümler</span>
            </h1>
            
            <!-- Arama Kutusu -->
            <div class="relative w-full md:w-auto">
                <input type="text" id="searchInput" 
                       class="search-input w-full md:w-64 pl-10 pr-4 py-3 rounded-xl text-white focus:outline-none"
                       placeholder="Anime veya bölüm ara...">
                <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-blue-500"></i>
            </div>
        </div>

        <% if (animes && animes.length > 0) { %>
            <div class="space-y-6">
                <% animes.forEach(anime => { %>
                    <div class="anime-group rounded-xl overflow-hidden">
                        <!-- Anime Başlık ve Toggle Butonu -->
                        <div class="flex items-center justify-between p-6 cursor-pointer hover:bg-gray-800/30 transition-colors" onclick="toggleEpisodes(this)">
                            <div class="flex items-center gap-6">
                                <img src="<%= anime._id.imageUrl %>" alt="<%= anime._id.animeName %>" 
                                     class="w-20 h-20 rounded-xl object-cover shadow-lg">
                                <div>
                                    <h3 class="text-xl font-bold mb-2">
                                        <%= anime._id.animeName %>
                                    </h3>
                                    <div class="flex items-center gap-3">
                                        <span class="bg-blue-500/20 text-blue-400 px-3 py-1 rounded-full text-sm border border-blue-500/30">
                                            <%= anime.episodes.length %> yeni bölüm
                                        </span>
                                        <span class="text-gray-400 text-sm">
                                            <i class="fas fa-clock mr-2 text-blue-500"></i>Son 24 saat
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <i class="fas fa-chevron-down toggle-icon text-2xl"></i>
                        </div>
                        
                        <!-- Bölüm Listesi -->
                        <div class="episodes-container">
                            <div class="divide-y divide-gray-700/30">
                                <% anime.episodes.sort((a, b) => new Date(b.addedDate) - new Date(a.addedDate)).forEach(episode => { %>
                                    <a href="/anime/<%= anime._id.animeId %>" class="episode-item flex items-center justify-between p-6 hover:bg-gray-800/30">
                                        <div class="flex items-center gap-6">
                                            <div class="play-icon-wrapper">
                                                <i class="fas fa-play play-icon"></i>
                                            </div>
                                            <div>
                                                <h4 class="font-semibold text-lg mb-1">
                                                    Sezon <%= episode.season %>, Bölüm <%= episode.episodeNumber %>
                                                </h4>
                                                <% 
                                                    const addedDate = new Date(episode.addedDate);
                                                    const now = new Date();
                                                    const diffHours = Math.floor((now - addedDate) / (1000 * 60 * 60));
                                                    const diffMinutes = Math.floor((now - addedDate) / (1000 * 60)) % 60;
                                                    let timeAgo;
                                                    if (diffHours > 0) {
                                                        timeAgo = `${diffHours} saat${diffHours > 1 ? '' : ''} önce`;
                                                    } else {
                                                        timeAgo = `${diffMinutes} dakika önce`;
                                                    }
                                                %>
                                                <div class="flex items-center gap-2 text-gray-400">
                                                    <i class="fas fa-clock text-blue-500"></i>
                                                    <span class="text-sm"><%= timeAgo %></span>
                                                </div>
                                            </div>
                                        </div>
                                        <i class="fas fa-chevron-right text-blue-500"></i>
                                    </a>
                                <% }); %>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <div class="text-center py-16 bg-gray-800/30 rounded-xl border border-gray-700/50">
                <div class="text-6xl mb-6 text-blue-500">
                    <i class="fas fa-clock"></i>
                </div>
                <h2 class="text-2xl font-bold mb-3">Henüz Yeni Bölüm Yok</h2>
                <p class="text-gray-400">Son 24 saat içinde eklenen yeni bölüm bulunmuyor.</p>
            </div>
        <% } %>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const animeGroups = document.querySelectorAll('.anime-group');
        
        searchInput.addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            
            animeGroups.forEach(group => {
                const animeTitle = group.querySelector('h3').textContent.toLowerCase();
                const episodes = group.querySelectorAll('.episode-item');
                let hasMatch = false;
                
                episodes.forEach(episode => {
                    const episodeInfo = episode.querySelector('h4').textContent.toLowerCase();
                    if (episodeInfo.includes(searchTerm)) {
                        hasMatch = true;
                        episode.style.display = '';
                    } else {
                        episode.style.display = 'none';
                    }
                });
                
                if (animeTitle.includes(searchTerm) || hasMatch) {
                    group.style.display = '';
                } else {
                    group.style.display = 'none';
                }
            });
        });
    });

    function toggleEpisodes(element) {
        const container = element.nextElementSibling;
        const icon = element.querySelector('.toggle-icon');
        
        container.classList.toggle('open');
        icon.classList.toggle('open');

        // Animasyon efekti
        if (container.classList.contains('open')) {
            element.closest('.anime-group').scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    }
    </script>
</body>
</html> 